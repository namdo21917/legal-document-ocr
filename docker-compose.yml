services:
  api:
    container_name: ocr_api
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
      - TESSERACT_CMD=/usr/bin/tesseract
      - POPPLER_PATH=/usr/lib/x86_64-linux-gnu/poppler
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_SECURE=false
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./output:/app/output
      - ./static:/app/static
      - pip_cache:/root/.cache/pip
    networks:
      - ocr_network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    container_name: postgres_db
    image: postgres:15.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    networks:
      - ocr_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.5
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - ocr_network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    container_name: minio_storage
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - ocr_network
    restart: always
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  ocr_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  pip_cache:
  minio_data: